import questionary
from moodle_db import get_questions_without_answers, update_grader_info
from main import check_answers_once
import time

def main_menu():
    current_interval = 30  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    while True:
        choice = questionary.select(
            "=== Moodle Evaluator CLI ===",
            choices=[
                f"1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ-–ø—Ä–æ–≤–µ—Ä–∫—É (–∏–Ω—Ç–µ—Ä–≤–∞–ª: {current_interval} —Å–µ–∫)",
                "2. –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏",
                "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤",
                "4. –í—ã—Ö–æ–¥"
            ]
        ).ask()

        if choice.startswith("1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ-–ø—Ä–æ–≤–µ—Ä–∫—É"):
            run_auto_check(current_interval)

        elif choice == "2. –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏":
            current_interval = change_interval(current_interval)

        elif choice == "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤":
            check_and_add_grader_answers()

        elif choice == "4. –í—ã—Ö–æ–¥":
            break

def change_interval(current_interval):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    new_interval = questionary.text(
        f"–¢–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {current_interval} —Å–µ–∫. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª (—Å–µ–∫—É–Ω–¥—ã):",
        validate=lambda x: x.isdigit() and int(x) > 0
    ).ask()
    return int(new_interval)

def check_and_add_grader_answers():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏ –∏—Ö –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
    questions = get_questions_without_answers()
    if not questions:
        print("üéâ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã —É–∂–µ –∏–º–µ—é—Ç —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã!")
        return

    print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤ –±–µ–∑ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.")
    
    for q in questions:
        print(f"\n–í–æ–ø—Ä–æ—Å ID {q['id']}: {q['name']}")
        print(f"–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞: {q['questiontext']}")
        
        if questionary.confirm("–î–æ–±–∞–≤–∏—Ç—å —ç—Ç–∞–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è —ç—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞?").ask():
            grader_info = questionary.text("–í–≤–µ–¥–∏—Ç–µ —ç—Ç–∞–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:").ask()
            if grader_info.strip():
                success = update_grader_info(q['id'], grader_info)
                print("‚úÖ –û—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!" if success else "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!")
            else:
                print("‚ùå –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")

def run_auto_check(interval):
    """–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ-–ø—Ä–æ–≤–µ—Ä–∫–∏ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º"""
    try:
        print(f"üîç –ê–≤—Ç–æ-–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ (–∏–Ω—Ç–µ—Ä–≤–∞–ª: {interval} —Å–µ–∫). –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
        while True:
            check_answers_once()
            time.sleep(interval)
    except KeyboardInterrupt:
        print("üõë –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

if __name__ == "__main__":
    main_menu()